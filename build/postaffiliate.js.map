{"version":3,"sources":["../src/postaffiliate.js"],"names":["PostAffiliatePro","constructor","urlServer","urlLogin","username","password","options","cookies","session","__getSession","requestSession","axios","get","headers","Array","isArray","split","replace","__authentication","bodyFormData","FormData","fields","push","append","JSON","stringify","login","method","url","data","getBuffer","getHeaders","join","o","__parseResult","length","getValue","__getAPI","S","response","result","returnData","returnFields","rows","key","tmpItem","keyHeader","value","forEach","field","name","command","commandResponse","affiliatesInCampaigns","offset","limit","campaigns","affiliates","addAffiliate","email","firstname","lastname","status","parentuserid","managername","refid","company","address","street","city","state","country","postalcode","phonenumber","fax","params","add","updateAffiliate","affiliateid","update","changeStatusAffiliate","ids","change","deleteAffiliate","deleted","category","filters","campaignsInfos","infos","promo","categoryid","coupons","report","campaignid","bannerid","datestart","dateend","reportClicks","type","clicks","reportTransactions","transactions","invoices","downloadInvoice","invoiceid","invoice","deeplink","banners","categories"],"mappings":"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","sourcesContent":["import \"@babel/polyfill/noConflict\";\n\nimport axios from \"axios\";\nimport FormData from \"form-data\";\n\nexport default class PostAffiliatePro {\n  constructor(urlServer, urlLogin, username, password, options) {\n    this.urlServer = urlServer;\n    this.urlLogin = urlLogin;\n    this.username = username;\n    this.password = password;\n    this.cookies = null;\n    this.session = null;\n    this.options = (options) ? options : [[\"rememberMe\", \"Y\"], [\"language\", \"fr-FR\"]];\n  }\n\n  async __getSession() {\n    let requestSession = await axios.get(this.urlLogin);\n    if (requestSession.headers && requestSession.headers[\"set-cookie\"] && Array.isArray(requestSession.headers[\"set-cookie\"]))\n      this.session = requestSession.headers[\"set-cookie\"][0].split(\";\")[0].replace(\"A=\", \"\");\n    return this.session;\n  }\n\n  async __authentication() {\n    let bodyFormData = new FormData();\n    //if (!this.session)\n    //await this.__getSession();\n\n    let fields = [[\"name\", \"value\"], [\"username\", this.username], [\"password\", this.password]];\n    if (this.options) {\n      fields.push(...this.options);\n    }\n    bodyFormData.append(\"D\", JSON.stringify({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Gpf_Api_AuthService\",\n        \"M\": \"authenticate\",\n        \"fields\": fields\n      }]\n    }));\n\n    let login = await axios({\n      method: \"POST\",\n      url: this.urlServer,\n      data: bodyFormData.getBuffer(),\n      headers: {\n        ...bodyFormData.getHeaders()\n      }\n    });\n\n    if (login && login.headers && login.headers[\"set-cookie\"])\n      this.cookies = login.headers[\"set-cookie\"].join(\";\");\n    let o = await this.__parseResult(login.data);\n    if (o.fields && o.fields.length > 0) {\n      this.session = await this.getValue(o.fields, \"S\");\n    }\n\n    return true;\n  }\n\n  async __getAPI(data) {\n    if (!this.cookies)\n      await this.__authentication();\n\n    data.S = this.session;\n\n    let bodyFormData = new FormData();\n    bodyFormData.append(\"D\", JSON.stringify(data));\n\n    let response = await axios({\n      method: \"POST\",\n      url: this.urlServer,\n      data: bodyFormData.getBuffer(),\n      headers: {\n        \"Cookie\": `A=${this.session}; ${this.cookies}`,\n        ...bodyFormData.getHeaders()\n      }\n    });\n\n    return response.data;\n  }\n\n  async __parseResult(result) {\n    if (result.length > 0) {\n      let returnData = [], returnFields = [], headers = [];\n      if (result[0].rows || result[0].fields) {\n        let rows = result[0].rows;\n        let fields = (result[0].fields) ? result[0].fields : null;\n\n        for (let key in rows) {\n          if (key == 0) headers = rows[0];\n          else {\n            let tmpItem = {};\n\n            for (let keyHeader in headers)\n              tmpItem[headers[keyHeader]] = rows[key][keyHeader];\n\n            returnData.push(tmpItem);\n          }\n        }\n\n        if (fields) {\n          for (let key in fields) {\n            if (key == 0) headers = fields[0];\n            else {\n              let tmpItem = {};\n\n              for (let keyHeader in headers)\n                tmpItem[headers[keyHeader]] = fields[key][keyHeader];\n\n              returnFields.push(tmpItem);\n            }\n          }\n        }\n      } else {\n        let rows = result[0];\n        for (let key in rows) {\n          if (key == 0) headers = rows[0];\n          else {\n            let tmpItem = {};\n\n            for (let keyHeader in headers)\n              tmpItem[headers[keyHeader]] = rows[key][keyHeader];\n\n            returnData.push(tmpItem);\n          }\n        }\n      }\n\n      return {\n        data: returnData,\n        fields: returnFields\n      };\n    } else {\n      return null;\n    }\n  }\n\n  async getValue(fields, key) {\n    let value = null;\n    if (fields.length > 0) {\n      fields.forEach(function (field) {\n        if (field.name === key && field.value) {\n          value = field.value;\n        }\n      });\n    }\n    return value;\n  }\n\n  async command(data) {\n    let result = await this.__getAPI(data);\n\n    if (result)\n      result = this.__parseResult(result);\n\n    return result;\n  }\n\n  async commandResponse(data) {\n    return await this.__getAPI(data);\n  }\n\n  /**\n   *\n   * @param offset\n   * @param limit\n   * @returns {Promise<*>}\n   */\n  async affiliatesInCampaigns(offset, limit) {\n    let campaigns = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Features_Common_AffiliateCampaignsGrid\",\n        \"M\": \"getRows\",\n        \"offset\": offset,\n        \"limit\": limit\n      }]\n    });\n    return campaigns.data;\n  }\n\n  /**\n   *\n   * @param offset\n   * @param limit\n   * @returns {Promise<*>}\n   */\n  async affiliates(offset, limit) {\n    let affiliates = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Merchants_User_TopAffiliatesGrid\",\n        \"M\": \"getRows\",\n        \"offset\": offset,\n        \"limit\": limit\n      }]\n    });\n\n    return affiliates.data;\n  }\n\n  /**\n   *\n   * @param email : string\n   * @param password : string\n   * @param firstname : string\n   * @param lastname : string A|D|P\n   * @param status : string\n   * @param parentuserid : string\n   * @param managername : string\n   * @param refid : string\n   * @param company : string|null\n   * @param address : string|null\n   * @param street : string|null\n   * @param city : string|null\n   * @param state : string|null\n   * @param country : string|null\n   * @param postalcode : string|null\n   * @param phonenumber : string|null\n   * @param fax : string|null\n   * @returns {Promise<*>}\n   */\n  async addAffiliate(email, password, firstname, lastname, status, parentuserid, managername, refid, company, address, street, city, state, country, postalcode, phonenumber, fax) {\n    let params = [\n      [\"name\", \"value\"],\n      [\"Id\", \"\"],\n      [\"username\", email],\n      [\"rpassword\", password],\n      [\"customTimezone\", \"\"],\n      [\"useCustomTimezone\", \"N\"],\n      [\"lang\", \"\"],\n      [\"photo\", \"\"],\n      [\"note\", \"\"],\n      [\"dontSendEmail\", \"Y\"],\n      [\"createSignupReferralComm\", \"N\"],\n    ];\n    if (firstname)\n      params.push([\"firstname\", firstname]);\n    if (lastname)\n      params.push([\"lastname\", lastname]);\n    if (status)\n      params.push([\"rstatus\", status]);\n    if (parentuserid)\n      params.push([\"parentuserid\", parentuserid]);\n    if (refid)\n      params.push([\"refid\", refid]);\n    if (address)\n      params.push([\"data1\", address]);\n    if (company)\n      params.push([\"data2\", company]);\n    if (street)\n      params.push([\"data3\", street]);\n    if (city)\n      params.push([\"data4\", city]);\n    if (state)\n      params.push([\"data5\", state]);\n    if (country)\n      params.push([\"data6\", country]);\n    if (postalcode)\n      params.push([\"data7\", postalcode]);\n    if (phonenumber)\n      params.push([\"data8\", phonenumber]);\n    if (fax)\n      params.push([\"data9\", fax]);\n    if (managername)\n      params.push([\"data10\", managername]);\n\n    let add = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Merchants_User_AffiliateForm\",\n        \"M\": \"add\",\n        \"fields\": params\n      }]\n    });\n    return add;\n  }\n\n  async updateAffiliate(affiliateid, email, password, firstname, lastname, status, parentuserid, managername, refid, company, address, street, city, state, country, postalcode, phonenumber, fax) {\n    let params = [\n      [\"name\", \"value\"],\n      [\"Id\", affiliateid],\n      [\"username\", email],\n      [\"customTimezone\", \"\"],\n      [\"useCustomTimezone\", \"N\"],\n      [\"lang\", \"\"],\n      [\"photo\", \"\"],\n      [\"note\", \"\"],\n      [\"dontSendEmail\", \"Y\"],\n      [\"createSignupReferralComm\", \"N\"],\n    ];\n    if (password)\n      params.push([\"rpassword\", password]);\n    if (firstname)\n      params.push([\"firstname\", firstname]);\n    if (lastname)\n      params.push([\"lastname\", lastname]);\n    if (status)\n      params.push([\"rstatus\", status]);\n    if (parentuserid)\n      params.push([\"parentuserid\", parentuserid]);\n    if (refid)\n      params.push([\"refid\", refid]);\n    if (address)\n      params.push([\"data1\", address]);\n    if (company)\n      params.push([\"data2\", company]);\n    if (street)\n      params.push([\"data3\", street]);\n    if (city)\n      params.push([\"data4\", city]);\n    if (state)\n      params.push([\"data5\", state]);\n    if (country)\n      params.push([\"data6\", country]);\n    if (postalcode)\n      params.push([\"data7\", postalcode]);\n    if (phonenumber)\n      params.push([\"data8\", phonenumber]);\n    if (fax)\n      params.push([\"data9\", fax]);\n    if (managername)\n      params.push([\"data10\", managername]);\n    let update = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Merchants_User_AffiliateForm\",\n        \"M\": \"save\",\n        \"fields\": params\n      }]\n    });\n\n    return update;\n  }\n\n  /**\n   *\n   * @param status : A|D|P\n   * @param ids : [string]\n   * @returns {Promise<*>}\n   */\n  async changeStatusAffiliate(status, ids) {\n    let change = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Merchants_User_AffiliateForm\",\n        \"M\": \"changeStatus\",\n        \"status\": status,\n        \"dontSendNotification\": \"Y\",\n        \"ids\": ids\n      }]\n    });\n    return change;\n  }\n\n  /**\n   * @param ids : [string]\n   * @returns {Promise<*>}\n   */\n  async deleteAffiliate(ids) {\n    let deleted = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Merchants_User_AffiliateForm\",\n        \"M\": \"deleteRows\",\n        \"moveChildAffiliates\": \"N\",\n        \"ids\": ids\n      }]\n    });\n\n    return deleted;\n  }\n\n  /**\n   * @param category: string|null\n   * @param offset\n   * @param limit\n   * @returns {Promise<*>}\n   */\n  async campaigns(category, offset, limit) {\n    let filters = [[\"rstatus\", \"IN\", \"A\"], [\"rtype\", \"IN\", \"P\"]];\n    if (category) {\n      filters.push([\"campaigncategoryid\", \"IN\", category]);\n    }\n    let campaigns = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Merchants_Campaign_CampaignsGrid\",\n        \"M\": \"getRows\",\n        \"offset\": offset,\n        \"limit\": limit,\n        \"sort_col\": \"rorder\",\n        \"sort_asc\": true,\n        \"filters\": filters\n      }]\n    });\n\n    return campaigns.data;\n  }\n\n  /**\n   *\n   * @param filters : []\n   * @returns {Promise<*>}\n   */\n  async campaignsInfos(filters) {\n    let infos = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Merchants_Campaign_CampaignsInfoData\",\n        \"M\": \"load\",\n        //\"filters\": [[\"dateinserted\",\"DP\",\"TM\"]]\n        \"filters\": filters\n      }]\n    });\n\n    return infos.data;\n  }\n\n  /**\n   *\n   * @param categoryid\n   * @param offset\n   * @param limit\n   * @returns {Promise<*>}\n   */\n  async promo(categoryid, offset, limit) {\n    let coupons = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Affiliates_Promo_BannersGrid\",\n        \"M\": \"getRows\",\n        \"offset\": offset,\n        \"limit\": limit,\n        \"filters\": [[\"type\", \"IN\", \"A,E,I,T\"], [\"categoryid\", \"=\", categoryid]],\n        \"columns\": [[\"id\"], [\"destinationurl\"], [\"name\"], [\"campaignid\"], [\"campaignname\"], [\"bannercode\"], [\"bannerdirectlinkcode\"], [\"bannerpreview\"], [\"rtype\"], [\"displaystats\"], [\"channelcode\"], [\"campaigndetails\"]]\n      }]\n    });\n\n    return coupons.data;\n  }\n\n  /**\n   *\n   * @param campaignid : string|null\n   * @param affiliateid : string|null\n   * @param bannerid : string|null\n   * @returns {Promise<*>}\n   */\n  async report(campaignid, affiliateid, bannerid, status, datestart, dateend) {\n    let filters = [];\n    if (campaignid)\n      filters.push([\"campaignid\", \"E\", campaignid]);\n    if (affiliateid)\n      filters.push([\"userid\", \"E\", affiliateid]);\n    if (bannerid)\n      filters.push([\"bannerid\", \"E\", bannerid]);\n    if (status)\n      filters.push([\"rstatus\", \"IN\", status]);\n\n    if (datestart && dateend) {\n      // 2020-07-31\n      filters.push([\"datetime\", \"D>=\", datestart]);\n      filters.push([\"datetime\", \"D<=\", dateend]);\n    }\n\n    //filters.push([\"datetime\", \"DP\", \"L30D\"]);\n    let report = await this.commandResponse({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Merchants_Reports_TrafficStatsData\",\n        \"M\": \"load\",\n        \"filters\": filters\n      }],\n    });\n\n    return report;\n  }\n\n  /**\n   *\n   * @param campaignid : string|null\n   * @param affiliateid : string|null\n   * @param bannerid : string|null\n   * @param type : string|null\n   * @param datestart : string|null\n   * @param dateend : string|null\n   * @param offset : int\n   * @param limit : int\n   * @returns {Promise<*>}\n   */\n  async reportClicks(campaignid, affiliateid, bannerid, type, datestart, dateend, offset, limit) {\n    let filters = [];\n    if (campaignid)\n      filters.push([\"campaignid\", \"E\", campaignid]);\n    if (affiliateid)\n      filters.push([\"userid\", \"E\", affiliateid]);\n    if (type)\n      filters.push([\"rtype\", \"IN\", type]); // R,U,D : (Repeated / Unique / Denied)\n    if (bannerid)\n      filters.push([\"bannerid\", \"E\", bannerid]);\n    if (datestart && dateend) {\n      // 2020-07-31\n      filters.push([\"datetime\", \"D>=\", datestart]);\n      filters.push([\"datetime\", \"D<=\", dateend]);\n    }\n\n    let clicks = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Merchants_Reports_ClicksGrid\",\n        \"M\": \"getRows\",\n        \"sort_col\": \"datetime\",\n        \"sort_asc\": false,\n        \"offset\": offset,\n        \"limit\": limit,\n        \"filters\": filters,\n        \"columns\": [[\"id\"], [\"id\"], [\"firstname\"], [\"lastname\"], [\"userid\"], [\"userstatus\"], [\"bannerid\"], [\"campaignid\"], [\"countrycode\"], [\"rtype\"], [\"datetime\"], [\"referrerurl\"], [\"visitorid\"], [\"ip\"], [\"cdata1\"], [\"cdata2\"]]\n      }]\n    });\n\n    return clicks.data;\n  }\n\n  /**\n   *\n   * @param campaignid : string|null\n   * @param affiliateid : string|null\n   * @param bannerid : string|null\n   * @param type : string|null\n   * @param datestart : string|null\n   * @param dateend : string|null\n   * @param offset : int\n   * @param limit : int\n   * @returns {Promise<*>}\n   */\n  async reportTransactions(campaignid, affiliateid, bannerid, type, datestart, dateend, offset, limit) {\n    let filters = [];\n    if (campaignid)\n      filters.push([\"campaignid\", \"E\", campaignid]);\n    if (affiliateid)\n      filters.push([\"userid\", \"E\", affiliateid]);\n    if (bannerid)\n      filters.push([\"bannerid\", \"E\", bannerid]);\n    if (type)\n      filters.push([\"rtype\", \"IN\", type]); // \"S,A\"\n    if (datestart && dateend) {\n      // 2020-07-31\n      filters.push([\"dateinserted\", \"D>=\", datestart]);\n      filters.push([\"dateinserted\", \"D<=\", dateend]);\n    }\n    let transactions = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Merchants_Transaction_TransactionsGrid\",\n        \"M\": \"getRows\",\n        \"sort_col\": \"dateinserted\",\n        \"sort_asc\": false,\n        \"offset\": offset,\n        \"limit\": limit,\n        \"filters\": filters,\n        \"columns\": [[\"id\"], [\"id\"], [\"commission\"], [\"totalcost\"], [\"t_orderid\"], [\"productid\"], [\"dateinserted\"], [\"name\"], [\"rtype\"], [\"tier\"], [\"commissionTypeName\"], [\"rstatus\"], [\"payoutstatus\"], [\"firstname\"], [\"lastname\"], [\"userid\"], [\"bannerid\"], [\"campaignid\"], [\"userstatus\"], [\"actions\"]]\n      }]\n    });\n\n    return transactions.data;\n  }\n\n  async invoices(offset, limit) {\n    let invoices = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Merchants_Payout_PayoutsToAffiliatesGrid\",\n        \"M\": \"getRows\",\n        \"sort_col\": \"dateinserted\",\n        \"sort_asc\": true,\n        \"offset\": offset,\n        \"limit\": limit,\n        \"columns\": [[\"id\"], [\"id\"], [\"payouthistoryid\"], [\"dateinserted\"], [\"firstname\"], [\"lastname\"], [\"userid\"], [\"userstatus\"], [\"amount\"], [\"affiliatenote\"], [\"actions\"]]\n      }]\n    });\n\n    return invoices.data;\n  }\n\n  async downloadInvoice(invoiceid) {\n    let invoice = await this.commandResponse({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Merchants_Payout_PayoutHistoryForm\",\n        \"M\": \"downloadAsPdf\",\n        \"invoiceId\": invoiceid,\n        \"FormResponse\": \"Y\",\n        \"FormRequest\": \"Y\"\n      }]\n    });\n\n    // https://arya.postaffiliatepro.com/scripts/server.php?C=Pap_Merchants_Payout_PayoutHistoryForm&M=downloadAsPdf&S=v2tanoufspjxxkwrjkp0sca5wo8u6f46&FormRequest=Y&invoiceId=lxnh7b03&FormResponse=Y\n    return invoice;\n  }\n\n  /**\n   *\n   * @param url\n   * @param campaignid\n   * @returns {Promise<*>}\n   */\n  async deeplink(url, campaignid) {\n    let deeplink = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Gpf_Rpc_Server\",\n        \"M\": \"run\",\n        \"requests\": [{\n          \"C\": \"Pap_Affiliates_Promo_DynamicLink\",\n          \"M\": \"getDeeplinkCode\",\n          \"fields\": [[\"name\", \"value\"], [\"desturl\", url], [\"campaignId\", campaignid]]\n        }],\n      }],\n    });\n\n    return deeplink.fields[2].value;\n  }\n\n  /**\n   * @param campaignid : int|null\n   * @param categories : string|null\n   * @param offset : int\n   * @param limit : int\n   * @returns {Promise<void>}\n   */\n  async banners(campaignid, categories, offset, limit) {\n    let filters = [[\"rstatus\", \"NE\", \"N\"], [\"type\", \"IN\", \"A\"]];\n    if (categories)\n      filters.push([\"categoryid\", \"IN\", categories]);\n    if (campaignid)\n      filters.push([\"campaignid\", \"E\", campaignid]);\n    let banners = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Merchants_Banner_BannersGrid\",\n        \"M\": \"getRows\",\n        \"sort_col\": \"rorder\",\n        \"sort_asc\": true,\n        \"offset\": offset,\n        \"limit\": limit,\n        \"filters\": filters,\n        \"columns\": [[\"id\"], [\"id\"], [\"banner\"], [\"rtype\"], [\"isconfirmed\"], [\"destinationurl\"], [\"rstatus\"], [\"categoryid\"], [\"rorder\"], [\"actions\"]]\n      }]\n    });\n\n    return banners.data;\n  }\n}"],"file":"postaffiliate.js"}