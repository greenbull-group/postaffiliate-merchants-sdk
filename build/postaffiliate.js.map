{"version":3,"sources":["../src/postaffiliate.js"],"names":["PostAffiliatePro","urlServer","urlLogin","username","password","options","cookies","session","axios","get","requestSession","headers","split","replace","bodyFormData","FormData","fields","push","append","JSON","stringify","method","url","data","getBuffer","getHeaders","login","join","__parseResult","o","length","getValue","__authentication","S","response","result","returnData","returnFields","rows","key","tmpItem","keyHeader","value","forEach","field","name","__getAPI","offset","limit","command","campaigns","affiliates","email","firstname","lastname","status","parentuserid","managername","refid","company","address","street","city","state","country","postalcode","phonenumber","fax","add","ids","change","deleted","filters","infos","categoryid","coupons","datestart","dateend","report","campaignid","deeplink"],"mappings":"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","sourcesContent":["import \"@babel/polyfill/noConflict\";\n\nimport axios from \"axios\";\nimport FormData from \"form-data\";\n\nexport default class PostAffiliatePro {\n  constructor(urlServer, urlLogin, username, password, options) {\n    this.urlServer = urlServer;\n    this.urlLogin = urlLogin;\n    this.username = username;\n    this.password = password;\n    this.cookies = null;\n    this.session = null;\n    this.options = (options) ? options : [[\"rememberMe\", \"Y\"], [\"language\", \"fr-FR\"]];\n  }\n\n  async __getSession() {\n    let requestSession = await axios.get(this.urlLogin);\n    this.session = requestSession.headers[\"set-cookie\"][0].split(\";\")[0].replace(\"A=\", \"\");\n    return this.session;\n  }\n\n  async __authentication() {\n    let bodyFormData = new FormData();\n    //if (!this.session)\n    //await this.__getSession();\n\n    let fields = [[\"name\", \"value\"], [\"username\", this.username], [\"password\", this.password]];\n    if (this.options) {\n      fields.push(...this.options);\n    }\n    bodyFormData.append(\"D\", JSON.stringify({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Gpf_Api_AuthService\",\n        \"M\": \"authenticate\",\n        \"fields\": fields\n      }]\n    }));\n\n    let login = await axios({\n      method: \"POST\",\n      url: this.urlServer,\n      data: bodyFormData.getBuffer(),\n      headers: {\n        ...bodyFormData.getHeaders()\n      }\n    });\n\n    this.cookies = login.headers[\"set-cookie\"].join(\";\");\n    let o = await this.__parseResult(login.data);\n    if (o.fields && o.fields.length > 0) {\n      this.session = await this.getValue(o.fields, \"S\");\n    }\n\n    return true;\n  }\n\n  async __getAPI(data) {\n    if (!this.cookies)\n      await this.__authentication();\n\n    data.S = this.session;\n\n    let bodyFormData = new FormData();\n    bodyFormData.append(\"D\", JSON.stringify(data));\n\n    let response = await axios({\n      method: \"POST\",\n      url: this.urlServer,\n      data: bodyFormData.getBuffer(),\n      headers: {\n        \"Cookie\": `A=${this.session}; ${this.cookies}`,\n        ...bodyFormData.getHeaders()\n      }\n    });\n\n    return response.data;\n  }\n\n  async __parseResult(result) {\n    if (result.length > 0) {\n      let returnData = [], returnFields = [], headers = [];\n      if (result[0].rows || result[0].fields) {\n        let rows = result[0].rows;\n        let fields = (result[0].fields) ? result[0].fields : null;\n\n        for (let key in rows) {\n          if (key == 0) headers = rows[0];\n          else {\n            let tmpItem = {};\n\n            for (let keyHeader in headers)\n              tmpItem[headers[keyHeader]] = rows[key][keyHeader];\n\n            returnData.push(tmpItem);\n          }\n        }\n\n        if (fields) {\n          for (let key in fields) {\n            if (key == 0) headers = fields[0];\n            else {\n              let tmpItem = {};\n\n              for (let keyHeader in headers)\n                tmpItem[headers[keyHeader]] = fields[key][keyHeader];\n\n              returnFields.push(tmpItem);\n            }\n          }\n        }\n      } else {\n        let rows = result[0];\n        for (let key in rows) {\n          if (key == 0) headers = rows[0];\n          else {\n            let tmpItem = {};\n\n            for (let keyHeader in headers)\n              tmpItem[headers[keyHeader]] = rows[key][keyHeader];\n\n            returnData.push(tmpItem);\n          }\n        }\n      }\n\n      return {\n        data: returnData,\n        fields: returnFields\n      };\n    } else {\n      return null;\n    }\n  }\n\n  async getValue(fields, key) {\n    let value = null;\n    if (fields.length > 0) {\n      fields.forEach(function (field) {\n        if (field.name === key && field.value) {\n          value = field.value;\n        }\n      });\n    }\n    return value;\n  }\n\n  async command(data) {\n    let result = await this.__getAPI(data);\n\n    if (result)\n      result = this.__parseResult(result);\n\n    return result;\n  }\n\n  /**\n   *\n   * @param offset\n   * @param limit\n   * @returns {Promise<*>}\n   */\n  async affiliatesInCampaigns(offset, limit) {\n    let campaigns = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Features_Common_AffiliateCampaignsGrid\",\n        \"M\": \"getRows\",\n        \"offset\": offset,\n        \"limit\": limit\n      }]\n    });\n    return campaigns.data;\n  }\n\n  /**\n   *\n   * @param offset\n   * @param limit\n   * @returns {Promise<*>}\n   */\n  async affiliates(offset, limit) {\n    let affiliates = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Merchants_User_TopAffiliatesGrid\",\n        \"M\": \"getRows\",\n        \"offset\": offset,\n        \"limit\": limit\n      }]\n    });\n\n    return affiliates.data;\n  }\n\n  /**\n   *\n   * @param email : string\n   * @param password : string\n   * @param firstname : string\n   * @param lastname : string\n   * @param status : string\n   * @param parentuserid : string\n   * @param managername : string\n   * @param refid : string\n   * @param company : string|null\n   * @param address : string|null\n   * @param street : string|null\n   * @param city : string|null\n   * @param state : string|null\n   * @param country : string|null\n   * @param postalcode : string|null\n   * @param phonenumber : string|null\n   * @param fax : string|null\n   * @returns {Promise<*>}\n   */\n  async addAffiliates(email, password, firstname, lastname, status, parentuserid, managername, refid, company, address, street, city, state, country, postalcode, phonenumber, fax) {\n    // status : A : Approved | D : Declined | P : Pending\n    let add = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Merchants_User_AffiliateForm\",\n        \"M\": \"add\",\n        \"fields\": [[\"name\", \"value\"], [\"Id\", \"\"], [\"username\", email], [\"rpassword\", password], [\"firstname\", firstname], [\"lastname\", lastname], [\"customTimezone\", \"\"], [\"useCustomTimezone\", \"N\"], [\"lang\", \"\"], [\"photo\", \"\"], [\"rstatus\", status], [\"note\", \"\"], [\"dontSendEmail\", \"Y\"], [\"createSignupReferralComm\", \"N\"], [\"parentuserid\", parentuserid], [\"refid\", refid], [\"data1\", address], [\"data2\", company], [\"data3\", street], [\"data4\", city], [\"data5\", state], [\"data6\", country], [\"data7\", postalcode], [\"data8\", phonenumber], [\"data9\", fax], [\"data10\", managername]]\n      }]\n    });\n    return add;\n  }\n\n  /**\n   *\n   * @param status : A for Approved OR D for Declined OR P for Pending\n   * @param ids : [string]\n   * @returns {Promise<*>}\n   */\n  async changeStatusAffiliate(status, ids) {\n    let change = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Merchants_User_AffiliateForm\",\n        \"M\": \"changeStatus\",\n        \"status\": status,\n        \"dontSendNotification\": \"Y\",\n        \"ids\": ids\n      }]\n    });\n    return change;\n  }\n\n  /**\n   * @param ids : [string]\n   * @returns {Promise<*>}\n   */\n  async deleteAffiliate(ids) {\n    let deleted = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Merchants_User_AffiliateForm\",\n        \"M\": \"deleteRows\",\n        \"moveChildAffiliates\": \"N\",\n        \"ids\": ids\n      }]\n    });\n\n    return deleted;\n  }\n\n  /**\n   *\n   * @param offset\n   * @param limit\n   * @returns {Promise<*>}\n   */\n  async campaigns(offset, limit) {\n    let campaigns = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Merchants_Campaign_CampaignsGrid\",\n        \"M\": \"getRows\",\n        \"offset\": offset,\n        \"limit\": limit,\n        \"sort_col\": \"rorder\",\n        \"sort_asc\": true\n      }]\n    });\n\n    return campaigns.data;\n  }\n\n  /**\n   *\n   * @param filters : []\n   * @returns {Promise<*>}\n   */\n  async campaignsInfos(filters) {\n    let infos = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Merchants_Campaign_CampaignsInfoData\",\n        \"M\": \"load\",\n        //\"filters\": [[\"dateinserted\",\"DP\",\"TM\"]]\n        \"filters\": filters\n      }]\n    });\n\n    return infos.data;\n  }\n\n  /**\n   *\n   * @param categoryid\n   * @param offset\n   * @param limit\n   * @returns {Promise<*>}\n   */\n  async promo(categoryid, offset, limit) {\n    let coupons = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Affiliates_Promo_BannersGrid\",\n        \"M\": \"getRows\",\n        \"offset\": offset,\n        \"limit\": limit,\n        \"filters\": [[\"type\", \"IN\", \"A,E,I,T\"], [\"categoryid\", \"=\", categoryid]],\n        \"columns\": [[\"id\"], [\"destinationurl\"], [\"name\"], [\"campaignid\"], [\"campaignname\"], [\"bannercode\"], [\"bannerdirectlinkcode\"], [\"bannerpreview\"], [\"rtype\"], [\"displaystats\"], [\"channelcode\"], [\"campaigndetails\"]]\n      }]\n    });\n\n    return coupons.data;\n  }\n\n  /**\n   *\n   * @param datestart\n   * @param dateend\n   * @param status\n   * @returns {Promise<*>}\n   */\n  async report(datestart, dateend, status) {\n    let report = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Affiliates_Reports_TrendsReport\",\n        \"M\": \"loadData\",\n        \"isInitRequest\": \"N\",\n        \"filterType\": \"trends_report\",\n        \"filters\": [[\"datetime\", \"D>=\", datestart], [\"datetime\", \"D<=\", dateend], [\"rpc\", \"=\", \"Y\"], [\"groupBy\", \"=\", \"day\"], [\"dataType1\", \"=\", \"saleCount\"], [\"dataType2\", \"=\", \"saleCommission\"], [\"rstatus\", \"IN\", status]]\n      }],\n    });\n\n    return report.data;\n  }\n\n  /**\n   *\n   * @param url\n   * @param campaignid\n   * @returns {Promise<*>}\n   */\n  async deeplink(url, campaignid) {\n    let deeplink = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Gpf_Rpc_Server\",\n        \"M\": \"run\",\n        \"requests\": [{\n          \"C\": \"Pap_Affiliates_Promo_DynamicLink\",\n          \"M\": \"getDeeplinkCode\",\n          \"fields\": [[\"name\", \"value\"], [\"desturl\", url], [\"campaignId\", campaignid]]\n        }],\n      }],\n    });\n\n    return deeplink.fields[2].value;\n  }\n}"],"file":"postaffiliate.js"}