{"version":3,"sources":["../../src/class/postaffiliate.js"],"names":["axios","require","default","FormData","PostAffiliatePro","constructor","cookies","session","options","setUrlServer","urlServer","setUrlLogin","urlLogin","setUsername","username","setPassword","password","setOptions","__getSession","requestSession","get","headers","Array","isArray","split","replace","__authentication","bodyFormData","fields","push","append","JSON","stringify","login","method","url","data","getBuffer","getHeaders","join","o","__parseResult","length","getValue","__getAPI","S","response","__isSessionClosed","e","__getAPIG","result","returnData","returnFields","count","rows","key","tmpItem","keyHeader","value","forEach","field","name","command","commandResponse","responseType","affiliatesInCampaigns","offset","limit","campaigns","affiliates","addAffiliate","email","firstname","lastname","status","parentuserid","managername","refid","company","address","street","city","state","country","postalcode","phonenumber","fax","params","add","updateAffiliate","affiliateid","update","updatePaymentAffiliate","paymentMethod","paypalEmail","supportVAT","applyVatInvoicing","vatPercentage","vatNumber","amountOfRegCapital","regNumber","changeStatusAffiliate","ids","change","deleteAffiliate","deleted","category","filters","privateCampaigns","allCampaigns","filtredCampains","results","c","rtype","canSeeCampaign","canSeePrivateCampaign","campaignid","canSeePrivateCampaigns","campaignIds","requests","campaignsInfos","promo","categoryid","coupons","report","bannerid","datestart","dateend","reportClicks","type","clicks","maxRecords","totalRecords","cycles","Math","ceil","i","subitems","concat","reportTransactions","payoutstatus","visitorid","transactions","invoices","downloadInvoice","invoiceid","deeplink","banners","categories","reportPayouts","module","exports"],"mappings":"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","sourcesContent":["//import \"@babel/polyfill/noConflict\";\n//import axios from \"axios\";\n//import FormData from \"form-data\";\n\nconst axios = require(\"axios\").default;\nconst FormData = require(\"form-data\");\n\nclass PostAffiliatePro {\n\n  /**\n   * Constructor\n   */\n  constructor() {\n    this.cookies = null;\n    this.session = null;\n    this.options = [[\"rememberMe\", \"Y\"], [\"language\", \"fr-FR\"]];\n  }\n\n  setUrlServer(urlServer) {\n    this.urlServer = urlServer;\n  }\n\n  setUrlLogin(urlLogin) {\n    this.urlLogin = urlLogin;\n  }\n\n  setUsername(username) {\n    this.username = username;\n  }\n\n  setPassword(password) {\n    this.password = password;\n  }\n\n  setOptions(options) {\n    this.options = options;\n  }\n\n  async __getSession() {\n    let requestSession = await axios.get(this.urlLogin);\n    if (requestSession.headers && requestSession.headers[\"set-cookie\"] && Array.isArray(requestSession.headers[\"set-cookie\"]))\n      this.session = requestSession.headers[\"set-cookie\"][0].split(\";\")[0].replace(\"A=\", \"\");\n    return this.session;\n  }\n\n  async __authentication() {\n    let bodyFormData = new FormData();\n    //if (!this.session)\n    //await this.__getSession();\n\n    let fields = [[\"name\", \"value\"], [\"username\", this.username], [\"password\", this.password]];\n    if (this.options) {\n      fields.push(...this.options);\n    }\n    bodyFormData.append(\"D\", JSON.stringify({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Gpf_Api_AuthService\",\n        \"M\": \"authenticate\",\n        \"fields\": fields\n      }]\n    }));\n\n    let login = await axios({\n      method: \"POST\",\n      url: this.urlServer,\n      data: bodyFormData.getBuffer(),\n      headers: {\n        ...bodyFormData.getHeaders()\n      }\n    });\n\n    if (login && login.headers && login.headers[\"set-cookie\"])\n      this.cookies = login.headers[\"set-cookie\"].join(\";\");\n    let o = await this.__parseResult(login.data);\n    if (o.fields && o.fields.length > 0) {\n      this.session = await this.getValue(o.fields, \"S\");\n    }\n\n    return true;\n  }\n\n  async __getAPI(data) {\n    if (!this.cookies)\n      await this.__authentication();\n\n    data.S = this.session;\n\n    let bodyFormData = new FormData();\n    bodyFormData.append(\"D\", JSON.stringify(data));\n\n    let response = await axios({\n      method: \"POST\",\n      url: this.urlServer,\n      data: bodyFormData.getBuffer(),\n      headers: {\n        \"Cookie\": `A=${this.session}; ${this.cookies}`,\n        ...bodyFormData.getHeaders()\n      }\n    });\n\n    if (this.__isSessionClosed(response)) {\n      this.cookies = null;\n      this.__getAPI(data);\n    }\n    return response.data;\n  }\n\n  __isSessionClosed(response) {\n    if (response && response.data && response.data.e && response.data.e === \"session_closed\") {\n      return true;\n    }\n    return false;\n  }\n\n  async __getAPIG(data) {\n    if (!this.cookies)\n      await this.__authentication();\n\n    data.S = this.session;\n\n    let bodyFormData = new FormData();\n    bodyFormData.append(\"D\", JSON.stringify(data));\n\n    let response = await axios({\n      method: \"GET\",\n      url: this.urlServer,\n      data: bodyFormData.getBuffer(),\n      headers: {\n        \"Cookie\": `A=${this.session}; ${this.cookies}`,\n        ...bodyFormData.getHeaders()\n      }\n    });\n\n    return response.data;\n  }\n\n  async __parseResult(result) {\n    if (result.length > 0) {\n      let returnData = [], returnFields = [], headers = [], count = 0;\n      if (result[0].rows || result[0].fields) {\n        let rows = result[0].rows;\n        let fields = (result[0].fields) ? result[0].fields : null;\n        count = result[0].count;\n        for (let key in rows) {\n          if (key == 0) headers = rows[0];\n          else {\n            let tmpItem = {};\n\n            for (let keyHeader in headers)\n              tmpItem[headers[keyHeader]] = rows[key][keyHeader];\n\n            returnData.push(tmpItem);\n          }\n        }\n\n        if (fields) {\n          for (let key in fields) {\n            if (key == 0) headers = fields[0];\n            else {\n              let tmpItem = {};\n\n              for (let keyHeader in headers)\n                tmpItem[headers[keyHeader]] = fields[key][keyHeader];\n\n              returnFields.push(tmpItem);\n            }\n          }\n        }\n      } else {\n        let rows = result[0];\n        for (let key in rows) {\n          if (key == 0) headers = rows[0];\n          else {\n            let tmpItem = {};\n\n            for (let keyHeader in headers)\n              tmpItem[headers[keyHeader]] = rows[key][keyHeader];\n\n            returnData.push(tmpItem);\n          }\n        }\n      }\n\n      return {\n        data: returnData,\n        fields: returnFields,\n        count: count\n      };\n    } else {\n      return null;\n    }\n  }\n\n  async getValue(fields, key) {\n    let value = null;\n    if (fields.length > 0) {\n      fields.forEach(function (field) {\n        if (field.name === key && field.value) {\n          value = field.value;\n        }\n      });\n    }\n    return value;\n  }\n\n  async command(data) {\n    let result = await this.__getAPI(data);\n\n    if (result)\n      result = this.__parseResult(result);\n\n    return result;\n  }\n\n  async commandResponse(data) {\n    if (!this.cookies)\n      await this.__authentication();\n\n    return await axios({\n      method: \"GET\",\n      url: this.urlServer + \"?C=Pap_Merchants_Payout_PayoutHistoryForm&M=downloadAsPdf&S=\" + this.session + \"&FormRequest=Y&invoiceId=\" + data + \"&FormResponse=Y\",\n      responseType: \"stream\",\n      headers: {\n        \"Cookie\": `A=${this.session}; ${this.cookies}`\n      }\n    });\n  }\n\n  /**\n   *\n   * @param offset\n   * @param limit\n   * @returns {Promise<*>}\n   */\n  async affiliatesInCampaigns(offset, limit) {\n    let campaigns = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Features_Common_AffiliateCampaignsGrid\",\n        \"M\": \"getRows\",\n        \"offset\": offset,\n        \"limit\": limit\n      }]\n    });\n    return campaigns.data;\n  }\n\n  /**\n   *\n   * @param offset\n   * @param limit\n   * @returns {Promise<*>}\n   */\n  async affiliates(offset, limit) {\n    let affiliates = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Merchants_User_TopAffiliatesGrid\",\n        \"M\": \"getRows\",\n        \"offset\": offset,\n        \"limit\": limit\n      }]\n    });\n\n    return affiliates.data;\n  }\n\n  /**\n   *\n   * @param email : string\n   * @param password : string\n   * @param firstname : string\n   * @param lastname : string A|D|P\n   * @param status : string\n   * @param parentuserid : string\n   * @param managername : string\n   * @param refid : string\n   * @param company : string|null\n   * @param address : string|null\n   * @param street : string|null\n   * @param city : string|null\n   * @param state : string|null\n   * @param country : string|null\n   * @param postalcode : string|null\n   * @param phonenumber : string|null\n   * @param fax : string|null\n   * @returns {Promise<*>}\n   */\n  async addAffiliate(email, password, firstname, lastname, status, parentuserid, managername, refid, company, address, street, city, state, country, postalcode, phonenumber, fax) {\n    let params = [\n      [\"name\", \"value\"],\n      [\"Id\", \"\"],\n      [\"username\", email],\n      [\"rpassword\", password],\n      [\"customTimezone\", \"\"],\n      [\"useCustomTimezone\", \"N\"],\n      [\"lang\", \"\"],\n      [\"photo\", \"\"],\n      [\"note\", \"\"],\n      [\"dontSendEmail\", \"Y\"],\n      [\"createSignupReferralComm\", \"N\"],\n    ];\n    if (firstname)\n      params.push([\"firstname\", firstname]);\n    if (lastname)\n      params.push([\"lastname\", lastname]);\n    if (status)\n      params.push([\"rstatus\", status]);\n    if (parentuserid)\n      params.push([\"parentuserid\", parentuserid]);\n    if (refid)\n      params.push([\"refid\", refid]);\n    if (address)\n      params.push([\"data1\", address]);\n    if (company)\n      params.push([\"data2\", company]);\n    if (street)\n      params.push([\"data3\", street]);\n    if (city)\n      params.push([\"data4\", city]);\n    if (state)\n      params.push([\"data5\", state]);\n    if (country)\n      params.push([\"data6\", country]);\n    if (postalcode)\n      params.push([\"data7\", postalcode]);\n    if (phonenumber)\n      params.push([\"data8\", phonenumber]);\n    if (fax)\n      params.push([\"data9\", fax]);\n    if (managername)\n      params.push([\"data10\", managername]);\n\n    let add = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Merchants_User_AffiliateForm\",\n        \"M\": \"add\",\n        \"fields\": params\n      }]\n    });\n    return add;\n  }\n\n  async updateAffiliate(affiliateid, email, password, firstname, lastname, status, parentuserid, managername, refid, company, address, street, city, state, country, postalcode, phonenumber, fax) {\n    let params = [\n      [\"name\", \"value\"],\n      [\"Id\", affiliateid],\n      [\"username\", email],\n      [\"customTimezone\", \"\"],\n      [\"useCustomTimezone\", \"N\"],\n      [\"lang\", \"\"],\n      [\"photo\", \"\"],\n      [\"note\", \"\"],\n      [\"dontSendEmail\", \"Y\"],\n      [\"createSignupReferralComm\", \"N\"],\n    ];\n    if (password)\n      params.push([\"rpassword\", password]);\n    if (firstname)\n      params.push([\"firstname\", firstname]);\n    if (lastname)\n      params.push([\"lastname\", lastname]);\n    if (status)\n      params.push([\"rstatus\", status]);\n    if (parentuserid)\n      params.push([\"parentuserid\", parentuserid]);\n    if (refid)\n      params.push([\"refid\", refid]);\n    if (address)\n      params.push([\"data1\", address]);\n    if (company)\n      params.push([\"data2\", company]);\n    if (street)\n      params.push([\"data3\", street]);\n    if (city)\n      params.push([\"data4\", city]);\n    if (state)\n      params.push([\"data5\", state]);\n    if (country)\n      params.push([\"data6\", country]);\n    if (postalcode)\n      params.push([\"data7\", postalcode]);\n    if (phonenumber)\n      params.push([\"data8\", phonenumber]);\n    if (fax)\n      params.push([\"data9\", fax]);\n    if (managername)\n      params.push([\"data10\", managername]);\n    let update = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Merchants_User_AffiliateForm\",\n        \"M\": \"save\",\n        \"fields\": params\n      }]\n    });\n\n    return update;\n  }\n\n  /**\n   *\n   * @param affiliateid : string\n   * @param paymentMethod : string\n   * @param paypalEmail : string\n   * @param supportVAT : boolean\n   * @param applyVatInvoicing : boolean\n   * @param vatPercentage\n   * @param vatNumber\n   * @param amountOfRegCapital\n   * @param regNumber\n   * @returns {Promise<any>}\n   */\n  async updatePaymentAffiliate(affiliateid, paymentMethod, paypalEmail, supportVAT, applyVatInvoicing, vatPercentage, vatNumber, amountOfRegCapital, regNumber) {\n    let params = [\n      [\"name\", \"value\"],\n      [\"Id\", affiliateid],\n      //[\"payoutoptionid\", \"8444af30\"],\n      //[\"pp_email\", paypalEmail],\n      [\"support_vat\", (supportVAT) ? \"Y\" : \"N\"],\n      [\"applyVatInvoicing\", (applyVatInvoicing) ? \"Y\" : \"N\"],\n    ];\n    if(paymentMethod) {\n      params.push([\"payoutoptionid\", paymentMethod]);\n      if(paymentMethod === '8444af30') {\n        params.push([\"pp_email\", paypalEmail]);\n      }\n    }\n    if (vatPercentage)\n      params.push([\"vatPercentage\", vatPercentage]);\n    if (vatNumber)\n      params.push([\"vatNumber\", vatNumber]);\n    if (amountOfRegCapital)\n      params.push([\"amountOfRegCapital\", amountOfRegCapital]);\n    if (regNumber)\n      params.push([\"regNumber\", regNumber]);\n    let update = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Merchants_User_AffiliateForm\",\n        \"M\": \"savePayouts\",\n        \"fields\": params\n      }]\n    });\n\n    return update;\n  }\n\n  /**\n   *\n   * @param status : A|D|P\n   * @param ids : [string]\n   * @returns {Promise<*>}\n   */\n  async changeStatusAffiliate(status, ids) {\n    let change = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Merchants_User_AffiliateForm\",\n        \"M\": \"changeStatus\",\n        \"status\": status,\n        \"dontSendNotification\": \"Y\",\n        \"ids\": ids\n      }]\n    });\n    return change;\n  }\n\n  /**\n   * @param ids : [string]\n   * @returns {Promise<*>}\n   */\n  async deleteAffiliate(ids) {\n    let deleted = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Merchants_User_AffiliateForm\",\n        \"M\": \"deleteRows\",\n        \"moveChildAffiliates\": \"N\",\n        \"ids\": ids\n      }]\n    });\n\n    return deleted;\n  }\n\n  /**\n   * @param category: string|null\n   * @param offset\n   * @param limit\n   * @returns {Promise<*>}\n   */\n  async campaigns(category, offset, limit) {\n    let filters = [[\"rstatus\", \"IN\", \"A\"], [\"rtype\", \"IN\", \"P\"]];\n    if (category) {\n      filters.push([\"campaigncategoryid\", \"IN\", category]);\n    }\n    let campaigns = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Merchants_Campaign_CampaignsGrid\",\n        \"M\": \"getRows\",\n        \"offset\": offset,\n        \"limit\": limit,\n        \"sort_col\": \"rorder\",\n        \"sort_asc\": true,\n        \"filters\": filters\n      }]\n    });\n\n    return campaigns;\n  }\n\n  /**\n   * @param category: string|null\n   * @param offset\n   * @param limit\n   * @returns {Promise<*>}\n   */\n  async privateCampaigns(category, offset, limit) {\n    let filters = [[\"rstatus\", \"IN\", \"A\"], [\"rtype\", \"IN\", \"I\"]];\n    if (category) {\n      filters.push([\"campaigncategoryid\", \"IN\", category]);\n    }\n    let campaigns = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Merchants_Campaign_CampaignsGrid\",\n        \"M\": \"getRows\",\n        \"offset\": offset,\n        \"limit\": limit,\n        \"sort_col\": \"rorder\",\n        \"sort_asc\": true,\n        \"filters\": filters\n      }]\n    });\n\n    return campaigns;\n  }\n\n  /**\n   * @param category: string|null\n   * @param offset\n   * @param limit\n   * @returns {Promise<*>}\n   */\n  async allCampaigns(category, offset, limit) {\n    let filters = [[\"rstatus\", \"IN\", \"A\"], [\"rtype\", \"IN\", \"P,I\"]];\n    if (category) {\n      filters.push([\"campaigncategoryid\", \"IN\", category]);\n    }\n    let campaigns = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Merchants_Campaign_CampaignsGrid\",\n        \"M\": \"getRows\",\n        \"offset\": offset,\n        \"limit\": limit,\n        \"sort_col\": \"rorder\",\n        \"sort_asc\": true,\n        \"filters\": filters\n      }]\n    });\n\n    return campaigns;\n  }\n\n  /**\n   *\n   * @param category\n   * @param username\n   * @param offset\n   * @param limit\n   * @returns {Promise<void>}\n   */\n  async filtredCampains(category, username, offset, limit) {\n    let campaigns = await this.privateCampaigns(category, offset, limit);\n    if(campaigns && campaigns.data) {\n      let results = [];\n      for(let c of campaigns.data) {\n        if(c.rtype === \"P\") {\n          results.push(c);\n        } else if(c.rtype === \"I\") {\n          let canSeeCampaign = await this.canSeePrivateCampaign(username, c.campaignid);\n          if(canSeeCampaign)\n            results.push(c);\n        }\n      }\n      return {\n        data: results,\n        count: results.length\n      };\n    }\n    return campaigns;\n  }\n\n  /**\n   * @param username : string\n   * @param campaignid : string\n   * @returns {Promise<*>}\n   */\n  async canSeePrivateCampaign(username, campaignid) {\n    let filters = [[\"rstatus\", \"IN\", \"A\"], [\"username\", \"E\", username], [\"campaignid\", \"E\", campaignid]];\n    let campaigns = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Features_Common_AffiliateGroupGrid\",\n        \"M\": \"getRows\",\n        \"offset\": 0,\n        \"limit\": 1,\n        \"sort_col\": \"username\",\n        \"sort_asc\": true,\n        \"campaignid\": campaignid,\n        \"filters\": filters\n      }]\n    });\n    return ((campaigns.count && campaigns.count === 1) ? true : false);\n  }\n\n  /**\n   * @param username : string\n   * @param campaignid : string\n   * @returns {Promise<*>}\n   */\n  async canSeePrivateCampaigns(username, campaignIds) {\n    let filters = [[\"rstatus\", \"IN\", \"A\"], [\"username\", \"E\", username]];\n    let requests = [];\n    for(let c of campaignIds) {\n      requests.push({\n        \"C\": \"Pap_Features_Common_AffiliateGroupGrid\",\n        \"M\": \"getRows\",\n        \"offset\": 0,\n        \"limit\": 1,\n        \"sort_col\": \"username\",\n        \"sort_asc\": true,\n        \"campaignid\": c,\n        \"filters\": filters\n      });\n    }\n\n    let campaigns = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": requests\n    });\n    return campaigns;\n  }\n\n  /**\n   *\n   * @param campaignid : string\n   * @returns {Promise<*>}\n   */\n  async campaignsInfos(campaignid) {\n    let filters = [[\"rstatus\", \"IN\", \"A\"], [\"rtype\", \"IN\", \"P,I\"], [\"campaignid\", \"E\", campaignid]];\n    let campaigns = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Merchants_Campaign_CampaignsGrid\",\n        \"M\": \"getRows\",\n        \"offset\": 0,\n        \"limit\": 0,\n        \"sort_col\": \"rorder\",\n        \"sort_asc\": true,\n        \"filters\": filters\n      }]\n    });\n\n    return campaigns;\n  }\n\n  /**\n   *\n   * @param categoryid\n   * @param offset\n   * @param limit\n   * @returns {Promise<*>}\n   */\n  async promo(categoryid, offset, limit) {\n    let coupons = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Affiliates_Promo_BannersGrid\",\n        \"M\": \"getRows\",\n        \"offset\": offset,\n        \"limit\": limit,\n        \"filters\": [[\"type\", \"IN\", \"A,E,I,T\"], [\"categoryid\", \"=\", categoryid]],\n        \"columns\": [[\"id\"], [\"destinationurl\"], [\"name\"], [\"campaignid\"], [\"campaignname\"], [\"bannercode\"], [\"bannerdirectlinkcode\"], [\"bannerpreview\"], [\"rtype\"], [\"displaystats\"], [\"channelcode\"], [\"campaigndetails\"]]\n      }]\n    });\n\n    return coupons.data;\n  }\n\n  /**\n   *\n   * @param campaignid : string|null\n   * @param affiliateid : string|null\n   * @param bannerid : string|null\n   * @returns {Promise<*>}\n   */\n  async report(campaignid, affiliateid, bannerid, status, datestart, dateend) {\n    let filters = [];\n    if (campaignid)\n      filters.push([\"campaignid\", \"E\", campaignid]);\n    if (affiliateid)\n      filters.push([\"userid\", \"E\", affiliateid]);\n    if (bannerid)\n      filters.push([\"bannerid\", \"E\", bannerid]);\n    if (status)\n      filters.push([\"rstatus\", \"IN\", status]);\n\n    if (datestart && dateend) {\n      // 2020-07-31\n      filters.push([\"datetime\", \"D>=\", datestart]);\n      filters.push([\"datetime\", \"D<=\", dateend]);\n    }\n\n    //filters.push([\"datetime\", \"DP\", \"L30D\"]);\n    let report = await this.commandResponse({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Merchants_Reports_TrafficStatsData\",\n        \"M\": \"load\",\n        \"filters\": filters\n      }],\n    });\n\n    return report;\n  }\n\n  /**\n   *\n   * @param campaignid : string|null\n   * @param affiliateid : string|null\n   * @param bannerid : string|null\n   * @param type : string|null\n   * @param datestart : string|null\n   * @param dateend : string|null\n   * @param offset : int\n   * @param limit : int\n   * @returns {Promise<*>}\n   */\n  async reportClicks(campaignid, affiliateid, bannerid, type, datestart, dateend, offset, limit) {\n    let filters = [];\n    if (campaignid)\n      filters.push([\"campaignid\", \"E\", campaignid]);\n    if (affiliateid)\n      filters.push([\"userid\", \"E\", affiliateid]);\n    if (type)\n      filters.push([\"rtype\", \"IN\", type]); // R,U,D : (Repeated / Unique / Denied)\n    if (bannerid)\n      filters.push([\"bannerid\", \"E\", bannerid]);\n    if (datestart && dateend) {\n      // 2020-07-31\n      filters.push([\"datetime\", \"D>=\", datestart]);\n      filters.push([\"datetime\", \"D<=\", dateend]);\n    }\n\n    let clicks = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Merchants_Reports_ClicksGrid\",\n        \"M\": \"getRows\",\n        \"sort_col\": \"datetime\",\n        \"sort_asc\": false,\n        \"offset\": offset,\n        \"limit\": limit,\n        \"filters\": filters,\n        \"columns\": [[\"id\"], [\"id\"], [\"firstname\"], [\"lastname\"], [\"userid\"], [\"userstatus\"], [\"bannerid\"], [\"banner\"], [\"campaignid\"], [\"campaign\"], [\"countrycode\"], [\"rtype\"], [\"datetime\"], [\"referrerurl\"], [\"destinationurl\"], [\"visitorid\"], [\"ip\"], [\"cdata1\"], [\"cdata2\"]]\n      }]\n    });\n    let maxRecords = (clicks && clicks.data) ? clicks.data.length : 0;\n    let totalRecords = clicks.count;\n    if (limit === 0 && maxRecords > 0) {\n      let cycles = Math.ceil(totalRecords / maxRecords);\n      for (let i = 1; i < cycles; i++) {\n        let subitems = await this.command({\n          \"C\": \"Gpf_Rpc_Server\",\n          \"M\": \"run\",\n          \"requests\": [{\n            \"C\": \"Pap_Merchants_Reports_ClicksGrid\",\n            \"M\": \"getRows\",\n            \"sort_col\": \"datetime\",\n            \"sort_asc\": false,\n            \"offset\": (i * maxRecords),\n            \"limit\": maxRecords,\n            \"filters\": filters,\n            \"columns\": [[\"id\"], [\"id\"], [\"firstname\"], [\"lastname\"], [\"userid\"], [\"userstatus\"], [\"bannerid\"], [\"banner\"], [\"campaignid\"], [\"campaign\"], [\"countrycode\"], [\"rtype\"], [\"datetime\"], [\"referrerurl\"], [\"destinationurl\"], [\"visitorid\"], [\"ip\"], [\"cdata1\"], [\"cdata2\"]]\n          }]\n        });\n\n        if (subitems && subitems.data && subitems.data.length > 0) {\n          clicks.data = clicks.data.concat(subitems.data);\n        }\n      }\n    }\n\n    return clicks;\n  }\n\n  /**\n   *\n   * @param campaignid : string|null\n   * @param affiliateid : string|null\n   * @param bannerid : string|null\n   * @param type : string|null\n   * @param payoutstatus : string|null\n   * @param visitorid : string|null\n   * @param datestart : string|null\n   * @param dateend : string|null\n   * @param offset : int\n   * @param limit : int\n   * @returns {Promise<*>}\n   */\n  async reportTransactions(campaignid, affiliateid, bannerid, type, payoutstatus, visitorid, datestart, dateend, offset, limit) {\n    let filters = [];\n    if (campaignid)\n      filters.push([\"campaignid\", \"E\", campaignid]);\n    if (affiliateid)\n      filters.push([\"userid\", \"E\", affiliateid]);\n    if (bannerid)\n      filters.push([\"bannerid\", \"E\", bannerid]);\n    if (type)\n      filters.push([\"rtype\", \"IN\", type]); // \"S,A\"\n    if (payoutstatus)\n      filters.push([\"payoutstatus\", \"IN\", payoutstatus]); // \"P\"\n    if (visitorid)\n      filters.push([\"visitorid\", \"E\", visitorid]);\n    if (datestart && dateend) {\n      // 2020-07-31\n      filters.push([\"dateinserted\", \"D>=\", datestart]);\n      filters.push([\"dateinserted\", \"D<=\", dateend]);\n    }\n    let transactions = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Merchants_Transaction_TransactionsGrid\",\n        \"M\": \"getRows\",\n        \"sort_col\": \"dateinserted\",\n        \"sort_asc\": false,\n        \"offset\": offset,\n        \"limit\": limit,\n        \"filters\": filters,\n        \"columns\": [[\"id\"], [\"id\"], [\"commission\"], [\"totalcost\"], [\"t_orderid\"], [\"productid\"], [\"dateinserted\"], [\"name\"], [\"rtype\"], [\"tier\"], [\"commissionTypeName\"], [\"rstatus\"], [\"payoutstatus\"], [\"firstname\"], [\"lastname\"], [\"userid\"], [\"bannerid\"], [\"campaignid\"], [\"banner\"], [\"name\"], [\"data1\"], [\"data2\"], [\"data3\"], [\"data4\"], [\"data5\"], [\"originalcurrencyid\"], [\"original_currency_code\"], [\"originalcurrencyrate\"], [\"originalcurrencyvalue\"], [\"firstclickdata1\"], [\"userstatus\"], [\"actions\"]]\n      }]\n    });\n\n    let maxRecords = (transactions && transactions.data) ? transactions.data.length : 0;\n    let totalRecords = transactions.count;\n    if (limit === 0 && maxRecords > 0) {\n      let cycles = Math.ceil(totalRecords / maxRecords);\n      for (let i = 1; i < cycles; i++) {\n        let subitems = await this.command({\n          \"C\": \"Gpf_Rpc_Server\",\n          \"M\": \"run\",\n          \"requests\": [{\n            \"C\": \"Pap_Merchants_Transaction_TransactionsGrid\",\n            \"M\": \"getRows\",\n            \"sort_col\": \"dateinserted\",\n            \"sort_asc\": false,\n            \"offset\": (i * maxRecords),\n            \"limit\": maxRecords,\n            \"filters\": filters,\n            \"columns\": [[\"id\"], [\"id\"], [\"commission\"], [\"totalcost\"], [\"t_orderid\"], [\"productid\"], [\"dateinserted\"], [\"name\"], [\"rtype\"], [\"tier\"], [\"commissionTypeName\"], [\"rstatus\"], [\"payoutstatus\"], [\"firstname\"], [\"lastname\"], [\"userid\"], [\"bannerid\"], [\"campaignid\"], [\"banner\"], [\"name\"], [\"data1\"], [\"data2\"], [\"data3\"], [\"data4\"], [\"data5\"], [\"originalcurrencyid\"], [\"original_currency_code\"], [\"originalcurrencyrate\"], [\"originalcurrencyvalue\"], [\"firstclickdata1\"], [\"userstatus\"], [\"actions\"]]\n          }]\n        });\n\n        if (subitems && subitems.data && subitems.data.length > 0) {\n          transactions.data = transactions.data.concat(subitems.data);\n        }\n      }\n    }\n\n    return transactions;\n  }\n\n  async invoices(affiliateid, offset, limit) {\n    let invoices = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Merchants_Payout_PayoutsToAffiliatesGrid\",\n        \"M\": \"getRows\",\n        \"sort_col\": \"dateinserted\",\n        \"sort_asc\": true,\n        \"offset\": offset,\n        \"limit\": limit,\n        \"filters\": [[\"userid\", \"E\", affiliateid]],\n        \"columns\": [[\"id\"], [\"id\"], [\"payouthistoryid\"], [\"dateinserted\"], [\"firstname\"], [\"lastname\"], [\"userid\"], [\"userstatus\"], [\"amount\"], [\"affiliatenote\"], [\"actions\"]]\n      }]\n    });\n\n    return invoices;\n  }\n\n  async downloadInvoice(invoiceid) {\n    return await this.commandResponse(invoiceid);\n  }\n\n  /**\n   *\n   * @param url\n   * @param campaignid\n   * @returns {Promise<*>}\n   */\n  async deeplink(url, campaignid) {\n    let deeplink = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Gpf_Rpc_Server\",\n        \"M\": \"run\",\n        \"requests\": [{\n          \"C\": \"Pap_Affiliates_Promo_DynamicLink\",\n          \"M\": \"getDeeplinkCode\",\n          \"fields\": [[\"name\", \"value\"], [\"desturl\", url], [\"campaignId\", campaignid]]\n        }],\n      }],\n    });\n\n    return deeplink.fields[2].value;\n  }\n\n  /**\n   * @param campaignid : int|null\n   * @param categories : string|null\n   * @param offset : int\n   * @param limit : int\n   * @returns {Promise<void>}\n   */\n  async banners(campaignid, categories, offset, limit) {\n    let filters = [[\"rstatus\", \"NE\", \"N\"], [\"type\", \"IN\", \"A\"]];\n    if (categories)\n      filters.push([\"categoryid\", \"IN\", categories]);\n    if (campaignid)\n      filters.push([\"campaignid\", \"E\", campaignid]);\n    let banners = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Merchants_Banner_BannersGrid\",\n        \"M\": \"getRows\",\n        \"sort_col\": \"rorder\",\n        \"sort_asc\": true,\n        \"offset\": offset,\n        \"limit\": limit,\n        \"filters\": filters,\n        \"columns\": [[\"id\"], [\"id\"], [\"banner\"], [\"rtype\"], [\"isconfirmed\"], [\"destinationurl\"], [\"rstatus\"], [\"categoryid\"], [\"rorder\"], [\"actions\"]]\n      }]\n    });\n\n    return banners;\n  }\n\n  async reportPayouts(affiliateid) {\n    let filters = [];\n    if (affiliateid)\n      filters.push([\"userid\", \"E\", affiliateid]);\n    let report = await this.command({\n      \"C\": \"Gpf_Rpc_Server\",\n      \"M\": \"run\",\n      \"requests\": [{\n        \"C\": \"Pap_Merchants_Payout_PayoutsInfoData\",\n        \"M\": \"load\",\n        \"filters\": filters\n      }]\n    });\n\n    return report;\n  }\n}\n\n//Export class\nmodule.exports = PostAffiliatePro;"],"file":"postaffiliate.js"}